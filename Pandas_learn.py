# -*- coding: utf-8 -*-
"""
Created on Wed Dec  2 11:38:19 2020

@author: Wei_Wei
"""


'''
df.iloc[:,[1,5]].head() # 选取第一列、第五列的前五行数据

iloc 后的方括号中逗号之前的部分表示要获取的行的位置，
     只输入一个冒号，不输入任何数值表示获取所有的行；
     逗号之后的方括号表示要获取的列的位置，列的位置同样是也是从0开始计数。


loc： 值索引,通过选取行（列）标签索引数据,通过行索引 “Index” 中的具体值来取行数据
iloc：位置索引,通过选取行（列）位置编号索引数据，列表形式
ix：  既可以通过行（列）标签索引数据，也可以通过行（列）位置编号索引数据

df.loc[:,"省":"区"].head()             # 选取省，市，区的前五行数据
df.loc[:,["省","市","区"]].head()      # 选取省，市，区的前五行数据
df.iloc[:,1:5].head()                 # 选取连续的第1到4列
df.loc[[0,3],["省","市"]]              # 选取第0行与第3行的省与市的数据
df.iloc[[0,3],[6,7]]                  # 选取第0行与第3行的省与市的数据

df.loc[df["省"]=="内蒙古自治区"]                                              #利用loc函数，根据某个数据来提取数据所在的行
df.loc[(df["省"]=="内蒙古自治区")&(df["商品SKU信息"]=="黑色M 105-120斤 1个")]   #多条件选择行。

df["状态"][0:3]                        # 选择状态列第0到2行
df[["状态","商品SKU信息"]][0:3]        # 选择状态列、商品SKU信息列的第0到2行

df.loc[1]                             #  选取索引值为１的行（第２行）
df.loc[[1,3],["订单编号","物品名称"]]  # 提取index为'1','3',列名为'订单编号','物品名称'中的数据

df["实际价格(元)"]>200                 # 判断实际价格是否大于200，返回True，False
df[df["实际价格(元)"]>200].head()      #　选择实际价格大于２００的前５行数据

df[(df["实际价格(元)"]>200) & (df["实际支付(元)"]<300)]         #  选择实际价格大于２００和实际支付小于３００的行

df.loc[[1,3,5],["实际价格(元)","实际支付(元)"]]　　              # 　选择索引值为１，３，５的实际价格和实际支付的行数据
df[df["实际价格(元)"]>200][["运费(元)","数量","实际价格(元)"]]   #布尔索引+普通索引是先对表进行布尔索引选择行，然后通过普通索引选择列


df.iloc[0:3,1:3] #切片索引+切片索引是通过同时传入行、列索引的位置区间进行数据选择
df[["实际价格(元)","实际支付(元)"]].iloc[0:2] #切片索引+普通索引选择指定的行和列














'''
